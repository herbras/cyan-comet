---
import Icon, { Props as IconProps } from "./Icon.astro";
import ThemeToggle from "./ThemeToggle.astro";

/** Main menu items */
import { config } from '../config.ts';

const textLinks: { label: string; href: string }[] = [
  { label: "Home", href: `/` },
  { label: "Keunggulan", href: `/#Keunggulan` },
  { label: "Kurikulum", href: `/Kurikulum/` },
  { label: "Tentang Ma'had", href: `/about/` },
];


/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: { label: string; href: string; icon: IconProps["icon"] }[] = [
{
    label: "Map",
    href: "https://www.google.com/maps/dir//Hive+Five+18+Office+Park+Jl.+TB+Simatupang+No.18,+RW.1,+Kebagusan,+Kec.+Ps.+Minggu,+Jakarta+Selatan,+DKI+Jakarta+12520,+ID/@-6.2993288,106.7966507,13z/data=!4m8!4m7!1m0!1m5!1m1!1s0x2e69ed991e24018b:0xdc09de605e236810!2m2!1d106.8317561!2d-6.2994153",
    icon: "map",
  },
  {
    label: "Instagram",
    href: "https://www.instagram.com/murunah.id/",
    icon: "insta",
  },
  {
    label: "Linkedin",
    href: "https://www.linkedin.com/in/sarbeh/",
    icon: "linkedin",
  },
  
];

---

<nav id="navbar" class="  w-full navbar-bg-blur ">
  <div class="menu-header">
    <a href="/" class="site-title">
      <img
        alt="Icon MurunahID"
        class="w-3/12 rounded-full"
        src="/aada.png"
        style="height:45px; width:45px"/>
        <span class="hidden sm:block">
        Mahad Maliah </span>
    </a>
    <menu-button>
      <template>
        <button class="menu-button" aria-expanded="false" aria-label="Menu">
          <span class="sr-only">Menu</span>
          <Icon icon="list" />
        </button>
      </template>
    </menu-button>
  </div>
  <div id="menu-content">
    <ul class="nav-items " style="display: flex; align-items: center;">
      {
        textLinks
          .slice(0, textLinks.length - 2)
          .map(({ label, href }) => (
            <li>
              <a
                aria-current={Astro.url.pathname === href}
                class:list={[
                  "link",
                  {
                    active:
                      Astro.url.pathname === href ||
                      (href !== "/" && Astro.url.pathname.startsWith(href)),
                  },
                ]}
                href={href}
              >
                {label}
              </a>
            </li>
          ))
      }
     <div x-data="{ showDropdown: false }" class="text-white relative">
      <button
        @mouseover="showDropdown = true"
        @mouseleave="showDropdown = false"
        @click="showDropdown = !showDropdown"
        class=" rounded-full   border-e px-4 py-2 text-sm/none text-gray-600 hover:bg-gray-50 hover:text-gray-700"
      >
       Kelas Fikih
      </button>
    
      <div
        x-cloak
        x-show="showDropdown"
        @mouseover="showDropdown = true"
        @mouseleave="showDropdown = false"
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 transform scale-95"
        x-transition:enter-end="opacity-100 transform scale-100"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 transform scale-100"
        x-transition:leave-end="opacity-0 transform scale-95"
        class="absolute z-50 left-0 mt-2 w-48 py-2 bg-white shadow-lg rounded-md text-gray-700 ring-1 ring-black ring-opacity-5"
      >
      <a href="/kelas-fikih/waris" class="block px-4 py-2 hover:bg-gray-200">Fikih Waris</a>
      <a href="/kelas-fikih/hibah" class="block px-4 py-2 hover:bg-gray-200">Fikih Hibah</a>
      <a href="/kelas-fikih/wasiat" class="block px-4 py-2 hover:bg-gray-200">Fikih Wasiat</a>
      
      </div>
    </div>
      {
        textLinks
          .slice(-2)
          .map(({ label, href }) => (
            <li>
              <a
                aria-current={Astro.url.pathname === href}
                class:list={[
                  "link",
                  {
                    active:
                      Astro.url.pathname === href ||
                      (href !== "/" && Astro.url.pathname.startsWith(href)),
                  },
                ]}
                href={href}
              >
                {label}
              </a>
            </li>
          ))
      }
      
    
     
    </ul>
    
    
    
    <div class="flex items-center gap-4 menu-footer">
      <div class="sm:flex sm:gap-4">
        <a
          class="rounded-md bg-teal-600 px-5 py-2.5 text-sm font-medium text-white shadow"
          href="/"
        >
          Login
        </a>

        <div class="hidden sm:flex">
          <a
            class="rounded-md bg-gray-100 px-5 py-2.5 text-sm font-medium text-teal-600"
            href="/"
          >
            Register
          </a>
        </div>
      </div>
  </div>
</nav>

<script>
  class MenuButton extends HTMLElement {
    constructor() {
      super();

      // Inject menu toggle button when JS runs.
      this.appendChild(this.querySelector("template")!.content.cloneNode(true));
      const btn = this.querySelector("button")!;

      // Hide menu (shown by default to support no-JS browsers).
      const menu = document.getElementById("menu-content")!;
      menu.hidden = true;

      /** Set whether the menu is currently expanded or collapsed. */
      const setExpanded = (expand) => {
        btn.setAttribute("aria-expanded", expand ? "true" : "false");
        menu.hidden = !expand;
      };

      // Toggle menu visibility when the menu button is clicked.
      btn.addEventListener("click", () => setExpanded(menu.hidden));

      // Hide menu button for large screens.
      const handleViewports = (e) => {
        setExpanded(e.matches);
        btn.hidden = e.matches;
      };
      const mediaQueries = window.matchMedia("(min-width: 50em)");
      handleViewports(mediaQueries);
      mediaQueries.addEventListener("change", handleViewports);
    }
  }

  customElements.define("menu-button", MenuButton);

  // Add this code to the existing script block




</script>

<style>
  :root {
    --navbar-bg-color: rgba(255, 255, 255, 0.4);
  }
  .dropdown-content {
  display: none;
  position: absolute;
  background-color: white;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
}

.dropdown-content a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

.dropdown-content a:hover {
  background-color: #f1f1f1;
}

[x-cloak] {
  display: none;
}

  nav {
    z-index: 9999;
    position: fixed;
    
    font-family: var(--font-brand);
    font-weight: 500;
  }

  .navbar-bg-blur {
    background: var(--gradient-stroke);
backdrop-filter: blur(4px);
}

.menu-header {
display: flex;
justify-content: space-between;
gap: 0.5rem;
padding: 1rem 1.5rem;
}

.site-title {
display: flex;
gap: 0.5rem;
align-items: center;
line-height: 1.1;
color: var(--gray-0);
text-decoration: none;
}

.menu-button {
position: relative;
display: flex;
border: 0;
border-radius: 999rem;
padding: 0.5rem;
font-size: 1.5rem;
color: var(--gray-300);
background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
box-shadow: var(--shadow-md);
}

.menu-button[aria-expanded="true"] {
color: var(--gray-0);
background: linear-gradient(180deg, var(--gray-600), transparent),
radial-gradient(var(--gray-900), var(--gray-800) 150%);
}

.menu-button[hidden] {
display: none;
}

.menu-button::before {
position: absolute;
inset: -1px;
content: "";
background: var(--gradient-stroke);
border-radius: 999rem;
z-index: -1;
}

#menu-content {
position: absolute;
left: 0;
right: 0;
}

.nav-items {
margin: 0;
display: flex;
flex-direction: column;
gap: 1rem;
font-size: var(--text-md);
line-height: 1.2;
list-style: none;
padding: 2rem;
background-color: var(--gray-999);
border-bottom: 1px solid var(--gray-800);
}

.link {
display: inline-block;
color: var(--gray-300);
text-decoration: none;
}

.link.active {
color: var(--gray-0);
}

.menu-footer {
display: flex;
justify-content: space-between;
gap: 0.75rem;
padding: 1.5rem 2rem 1.5rem 1.5rem;
background-color: var(--gray-999);
border-radius: 0 0 0.75rem 0.75rem;
box-shadow: var(--shadow-lg);
}

@media (min-width: 50em) {
nav {
display: grid;
grid-template-columns: 1fr auto 1fr;
align-items: center;
padding: 1rem 5rem;
gap: 1rem;
}

.menu-header {
  padding: 0;
}

.site-title {
  font-size: var(--text-lg);
}

#menu-content {
  display: contents;
}

.nav-items {
  position: relative;
  flex-direction: row;
  font-size: var(--text-sm);
  border-radius: 999rem;
  border: 0;
  padding: 0.5rem 0.5625rem;
  box-shadow: var(--shadow-md);
}

.nav-items::before {
  position: absolute;
  inset: -1px;
  content: "";
  background: var(--gradient-stroke);
  border-radius: 999rem;
  z-index: -1;
}

.link {
padding: 0.25rem 0.5625rem;
margin: 0;
}

.link.active {
background-color: var(--gray-800);
color: var(--gray-0);
box-shadow: var(--shadow-sm);
border-radius: 999rem;
}

.theme-toggle {
display: flex;
justify-content: center;
align-items: center;
margin-left: 1rem;
}

.menu-footer {
grid-column: 3 / 4;
justify-content: flex-end;
padding: 0;
background: none;
box-shadow: none;
border-radius: 0;
}

/* Add these classes to the existing style block */
.navbar-scroll {
  transition: all 0.3s ease;
  
}

.navbar-scroll .site-title,
.navbar-scroll .menu-footer {
  display: none;
}

.navbar-scroll .nav-items {
  flex: 1;
  justify-content: center;
}



.menu-footer a {
display: inline-flex;
align-items: center;
gap: 0.5rem;
font-size: var(--text-sm);
padding: 0.25rem 1rem;
transition: background-color 0.2s ease, color 0.2s ease;
}

.menu-footer a:hover {
background-color: var(--gray-800);
color: var(--gray-0);
box-shadow: var(--shadow-sm);
border-radius: 999rem;
}
}
</style>
